parameters:
  - name: hdf5tag
    default: hdf5-1_10_7
  - name: extraflags
    default: ''
  - name: qtver
    default: 6.1.2
  - name: gui
    default: true
  - name: threading
    default: true

steps:
  - bash: |
      set -ex
      # -- General
      sudo apt-get update -q
      sudo apt-get install ninja-build python3-setuptools uuid uuid-dev
      sudo apt-get install libgl1-mesa-dev
      # -- Qt
      sudo pip3 install aqtinstall
      aqt install-qt --outputdir /tmp/qt linux desktop ${{ parameters.qtver }} -m all
      # -- Python
      pip3 install pyinstaller
    displayName: 'Install Prerequisites'
  - bash: |
      wget https://github.com/disorderedmaterials/HDF5/releases/download/${{ parameters.hdf5tag }}/${{ parameters.hdf5tag }}-linux.zip
      unzip ${{ parameters.hdf5tag }}-linux.zip
    displayName: 'Download HDF5 Artifacts'
  - bash: |
      set -ex
      HDF5_DIR="$(pwd)/${{ parameters.hdf5tag }}"
      # Managing packages
      Qt6_DIR=/tmp/qt/${{ parameters.qtver }}/gcc_64/lib/cmake/Qt6
      QT_BASE_DIR=/tmp/qt/${{ parameters.qtver }}/gcc_64
      export QTDIR=$QT_BASE_DIR
      export PATH=$QT_BASE_DIR/bin:$PATH
      export LD_LIBRARY_PATH=$QT_BASE_DIR/lib/x86_64-linux-gnu:$QT_BASE_DIR/lib:$LD_LIBRARY_PATH
      # Building
      mkdir build
      cd build
      cmake ../ -G Ninja ${{ parameters.extraflags }} -DLOCAL_STATIC_HDF5:bool=true -DHDF5_DIR:path=${HDF5_DIR} -Wl,-rpath,/tmp/qt/6.1.2/gcc_64/lib
      ninja

      cd ../
      pyinstaller backend/backend.py
      pyinstaller backend/launch.py
    displayName: 'Build'