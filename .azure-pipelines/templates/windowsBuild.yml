parameters:
  - name: hdf5tag
    default: hdf5-1_10_7
  - name: extraflags
    default: ''
  - name: qtver
    default: 6.1.2
  - name: gui
    default: true
  - name: threading
    default: true

steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.x'
  - script: |
      python3 -m pip install pyinstaller --exclude-module _bootlocale
      python3 -m pip install flask
    displayName: 'Install Prerequisites'
  - script: |
      python3 -m pip install aqtinstall
      python3 -m aqt install-qt --outputdir $(Build.BinariesDirectory)\\Qt windows desktop ${{ parameters.qtver }} win64_mingw81 -m all
    displayName: 'Install Qt'
  - powershell: |
      $ErrorActionPreference = 'Stop'
      $HDF5_ARTIFACTS = "https://github.com/disorderedmaterials/HDF5/releases/download/" + "${{ parameters.hdf5tag }}/${{ parameters.hdf5tag }}-windows.zip"
      wget $HDF5_ARTIFACTS -O hdf5.zip
      7z x hdf5.zip
    displayName: 'Download HDF5 Artifacts'
  - bash: |
      set -ex
      ls C:/ProgramData/chocolatey/lib/mingw
      HDF5_DIR="$(pwd)/${{ parameters.hdf5tag }}"
      Qt6_DIR="/d/a/1/b/Qt/6.1.2/mingw81_64"
      PATH="${PATH}:${Qt6_DIR}"
      mkdir build
      cd build
      cmake ../ -G "MinGW Makefiles" -DLOCAL_STATIC_HDF5:bool=True -DHDF5_DIR:path=${HDF5_DIR} ${{ parameters.extraflags }} -DCMAKE_PREFIX_PATH:path=${Qt6_DIR}/lib/cmake
      MinGW32-make.exe

      cd ../
      pyinstaller --hidden-import flask backend/isisInternal.py 
      pyinstaller backend/launch.py
    displayName: 'Build'