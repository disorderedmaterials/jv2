parameters:
  - name: hdf5tag
    default: hdf5-1_10_7
  - name: extraflags
    default: ''
  - name: qtver
    default: 6.1.2
  - name: gui
    default: true
  - name: threading
    default: true

steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.9'
  - script: |
      python3 -m pip install nuitka
      python3 -m pip install flask
      python3 -m pip install h5py
      python3 -m pip install lxml
    displayName: 'Install Prerequisites'
  - script: |
      python3 -m pip install aqtinstall
      python3 -m aqt install-qt --outputdir $(Build.BinariesDirectory)\\Qt windows desktop ${{ parameters.qtver }} win64_msvc2019_64 -m all
    displayName: 'Install Qt'
  - powershell: |
      $ErrorActionPreference = 'Stop'
      $HDF5_ARTIFACTS = "https://github.com/disorderedmaterials/HDF5/releases/download/" + "${{ parameters.hdf5tag }}/${{ parameters.hdf5tag }}-windows.zip"
      wget $HDF5_ARTIFACTS -O hdf5.zip
      7z x hdf5.zip
    displayName: 'Download HDF5 Artifacts'
  - bash: |
      set -ex
      HDF5_DIR="$(pwd)/${{ parameters.hdf5tag }}"
      Qt6_DIR="/d/a/1/b/Qt/6.1.2/msvc2019_64"
      PATH="${Qt6_DIR}:${PATH}"
      mkdir frontend/build
      cd frontend/build
      cmake ../ -G "Visual Studio 16 2019" -A "x64" -DLOCAL_STATIC_HDF5:bool=True -DHDF5_DIR:path=${HDF5_DIR} ${{ parameters.extraflags }} -DCMAKE_PREFIX_PATH:path=${Qt6_DIR}/lib/cmake
      cmake --build . --config Release
      cmake --install .

      cd ../../backend
      python3 -m pip wheel --wheel-dir=wheels .
    displayName: 'Build'
